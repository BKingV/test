import streamlit as st
import pandas as pd
import docx

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ Word-—Ñ–∞–π–ª–∞
def extract_questions_from_docx(file):
    doc = docx.Document(file)
    questions = []
    current_question = None
    current_options = []
    correct_answers = []

    for para in doc.paragraphs:
        text = para.text.strip()
        if text.startswith("–¢–ï–ú–ê:"):  # –ù–∞—á–∞–ª–æ –Ω–æ–≤–æ–π —Ç–µ–º—ã
            continue
        elif text and not text.startswith("‚Ññ"):  # –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
            if current_question:
                questions.append((current_question, current_options, correct_answers))
            current_question = text
            current_options = []
            correct_answers = []
        elif text.startswith("–≠—Ç–∞–ª–æ–Ω"):  # –ü–æ–º–µ—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
            if current_options:
                correct_answers.append(current_options[-1])
        elif text:  # –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
            current_options.append(text)

    if current_question:
        questions.append((current_question, current_options, correct_answers))
    
    return questions

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit
st.title("üìÑ –û–Ω–ª–∞–π–Ω —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑ Word-—Ñ–∞–π–ª–∞")

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Word-—Ñ–∞–π–ª —Å —Ç–µ—Å—Ç–∞–º–∏", type=["docx"])

if uploaded_file:
    st.success("–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ! –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã...")
    questions = extract_questions_from_docx(uploaded_file)
    
    if questions:
        st.subheader("üìã –ü—Ä–æ–π–¥–∏—Ç–µ —Ç–µ—Å—Ç")

        user_answers = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        for i, (question, options, correct) in enumerate(questions):
            user_choice = st.radio(question, options, key=f"q{i}")
            user_answers[i] = (question, user_choice, correct)

        if st.button("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç"):
            correct_count = sum(1 for ans in user_answers.values() if ans[1] in ans[2])
            total_questions = len(questions)
            st.success(f"üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {correct_count} –∏–∑ {total_questions}.")

            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
            results_data = []
            for q_num, (question, user_choice, correct_answers) in user_answers.items():
                is_correct = "‚úÖ" if user_choice in correct_answers else "‚ùå"
                results_data.append([question, user_choice, ", ".join(correct_answers), is_correct])

            df_results = pd.DataFrame(results_data, columns=["–í–æ–ø—Ä–æ—Å", "–í–∞—à –æ—Ç–≤–µ—Ç", "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç", "–†–µ–∑—É–ª—å—Ç–∞—Ç"])
            st.dataframe(df_results)  # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏

            # –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞
            if st.button("üîÑ –ü—Ä–æ–π—Ç–∏ –µ—â–µ —Ä–∞–∑"):
                st.experimental_rerun()
    else:
        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –≤–æ–ø—Ä–æ—Å—ã –∏–∑ —Ñ–∞–π–ª–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–æ—Ä–º–∞—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π.")
