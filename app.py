import docx
import streamlit as st

def load_questions_from_docx(file):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–∑ —Ñ–∞–π–ª–∞ .docx –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ"""
    doc = docx.Document(file)
    questions = []
    current_topic = ""
    
    for para in doc.paragraphs:
        if para.text.startswith("–¢–ï–ú–ê:"):
            current_topic = para.text.strip()
    
    for table in doc.tables:
        for row in table.rows[1:]:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            cells = row.cells
            if len(cells) >= 4:
                question_number = cells[0].text.strip()
                question_text = cells[1].text.strip()
                options = [opt.strip() for opt in cells[2].text.split("\n") if opt.strip()]  # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–∑–±–∏—Ä–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
                correct_answers = [ans.strip() for ans in cells[3].text.split("\n") if ans.strip()]  # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–∑–±–∏—Ä–∞–µ–º —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
                
                if question_text and options:
                    questions.append({
                        "topic": current_topic,
                        "number": question_number,
                        "question": question_text,
                        "options": options,
                        "correct_answers": correct_answers
                    })
    return questions

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Ç–µ—Å—Ç–∞"""
    st.title("üìù –¢—Ä–µ–Ω–∞–∂–µ—Ä –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —Ç–µ—Å—Ç—É")
    uploaded_file = st.file_uploader("üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª .docx —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏", type=["docx"])
    
    if uploaded_file:
        questions = load_questions_from_docx(uploaded_file)
        if not questions:
            st.error("‚ùå –û—à–∏–±–∫–∞: –≤–æ–ø—Ä–æ—Å—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
            return
        
        topics = list(set(q['topic'] for q in questions))
        selected_topic = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É", topics)
        topic_questions = [q for q in questions if q['topic'] == selected_topic]
        
        score = 0
        for idx, q in enumerate(topic_questions):
            st.write(f"**{q['number']}. {q['question']}**")  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–≤–æ–¥–∞
            selected_option = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç:", q['options'], key=f"q_{idx}", index=None)
            
            if st.button(f"–ü—Ä–æ–≤–µ—Ä–∏—Ç—å {q['number']}", key=f"check_{idx}"):
                if selected_option and selected_option in q['correct_answers']:
                    st.success("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
                    score += 1
                elif selected_option:
                    st.error(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {', '.join(q['correct_answers'])}")
                else:
                    st.warning("‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π.")
        
        st.write(f"üèÜ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {score}/{len(topic_questions)}")

if __name__ == "__main__":
    main()
