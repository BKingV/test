import streamlit as st
from docx import Document

def extract_themes_and_questions(doc):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–º—ã, –ø–æ–¥—Ç–µ–º—ã –∏ –≤–æ–ø—Ä–æ—Å—ã –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞."""
    themes = {}
    tables = doc.tables
    
    for table in tables:
        rows = table.rows
        if len(rows) < 2:
            continue
        
        headers = [cell.text.strip().lower() for cell in rows[0].cells]
        if "—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞" not in headers or "–≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞" not in headers:
            continue
        
        question_idx = headers.index("—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞")
        answers_idx = headers.index("–≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞")
        correct_idx = headers.index("—ç—Ç–∞–ª–æ–Ω") if "—ç—Ç–∞–ª–æ–Ω" in headers else None
        
        current_theme = "–¢–µ–º–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
        current_subtheme = None
        themes[current_theme] = []
        
        for row in rows[1:]:
            first_cell_text = row.cells[0].text.strip()
            question_text = row.cells[question_idx].text.strip()
            answer_text = row.cells[answers_idx].text.strip()
            correct_text = row.cells[correct_idx].text.strip() if correct_idx else ""
            
            if first_cell_text and not question_text:
                current_subtheme = first_cell_text
                continue
            
            question_data = {
                "question": question_text,
                "answers": [answer_text],
                "correct": [correct_text] if correct_text else [],
                "subtheme": current_subtheme,
            }
            themes[current_theme].append(question_data)
    
    return themes

st.title("üìÑ –û–Ω–ª–∞–π–Ω-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ —Ç–µ–º–∞–º")
uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Word-—Ñ–∞–π–ª —Å —Ç–µ—Å—Ç–∞–º–∏", type=["docx"])

if uploaded_file:
    doc = Document(uploaded_file)
    themes = extract_themes_and_questions(doc)

    if not themes:
        st.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–º—ã –∏ –≤–æ–ø—Ä–æ—Å—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
    else:
        st.session_state["themes"] = themes
        st.session_state["selected_theme"] = None
        st.session_state["selected_subtheme"] = None
        st.session_state["questions"] = []
        st.session_state["test_started"] = False

        selected_theme = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É", list(themes.keys()), key="theme_select")
        subthemes = list(set(q["subtheme"] for q in themes[selected_theme] if q["subtheme"])) if themes[selected_theme] else []

        selected_subtheme = None
        if subthemes:
            selected_subtheme = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ç–µ–º—É", subthemes, key="subtheme_select")
        
        if st.button("‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç"):
            st.session_state["selected_theme"] = selected_theme
            st.session_state["selected_subtheme"] = selected_subtheme if selected_subtheme else None
            st.session_state["questions"] = [q for q in themes[selected_theme] if q.get("subtheme") == selected_subtheme or not selected_subtheme]
            st.session_state["test_started"] = True
            st.session_state["current_question"] = 0
            st.session_state["selected_answers"] = {}
            st.rerun()
