import streamlit as st
from docx import Document

st.title("üìÑ –û–Ω–ª–∞–π–Ω-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –±–ª–æ–∫–∞–º –∏ —Ç–µ–º–∞–º")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Word-—Ñ–∞–π–ª —Å —Ç–µ—Å—Ç–∞–º–∏", type=["docx"])

def extract_blocks_and_questions(doc):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –±–ª–æ–∫–∏, —Ç–µ–º—ã –∏ –≤–æ–ø—Ä–æ—Å—ã –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
    blocks = {}
    current_block = None
    current_theme = None
    last_valid_theme = None  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–∞–π–¥–µ–Ω–Ω—É—é —Ç–µ–º—É

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –±–ª–æ–∫–æ–≤ –∏ —Ç–µ–º
    for para in doc.paragraphs:
        text = para.text.strip()
        style = para.style.name

        if style == "Heading 1":  # –ï—Å–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ 1-–≥–æ —É—Ä–æ–≤–Ω—è - —ç—Ç–æ –±–ª–æ–∫
            current_block = text
            blocks[current_block] = {}
            current_theme = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Ç–µ–º—É
        elif style == "Heading 2":  # –ï—Å–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ 2-–≥–æ —É—Ä–æ–≤–Ω—è - —ç—Ç–æ —Ç–µ–º–∞
            if current_block:
                current_theme = text.replace("–¢–ï–ú–ê:", "").strip()
                blocks[current_block][current_theme] = []
                last_valid_theme = current_theme  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ç–µ–º—É

    # –í—ã–≤–æ–¥–∏–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –±–ª–æ–∫–∏ –∏ —Ç–µ–º—ã (–æ—Ç–ª–∞–¥–∫–∞)
    st.subheader("üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –±–ª–æ–∫–∏ –∏ —Ç–µ–º—ã:")
    for block, themes in blocks.items():
        st.write(f"üîπ **{block}**")
        for theme in themes:
            st.write(f"  - {theme}")

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã, —á—Ç–æ–±—ã –ø—Ä–∏–≤—è–∑–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–∞–π–¥–µ–Ω–Ω–æ–π —Ç–µ–º–µ
    for table in doc.tables:
        if not current_block:
            st.warning("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ –Ω–∞–π–¥–µ–Ω–∞ –±–µ–∑ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –±–ª–æ–∫

        # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥ —Ç–∞–±–ª–∏—Ü–µ–π –Ω–µ –±—ã–ª–æ –Ω–æ–≤–æ–π —Ç–µ–º—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ç–µ–º—É
        if not current_theme:
            current_theme = last_valid_theme

        st.write("üîπ **–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É**")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
        st.write(f"üìå –¢–µ–∫—É—â–∏–π –±–ª–æ–∫: {current_block}")
        st.write(f"üìå –¢–µ–∫—É—â–∞—è —Ç–µ–º–∞: {current_theme}")

        if not current_theme:
            st.warning("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ –Ω–∞–π–¥–µ–Ω–∞ –±–µ–∑ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–π —Ç–µ–º—ã! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ —Ç–µ–º–∞

        rows = table.rows
        if len(rows) < 2:
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Ç–∞–±–ª–∏—Ü—ã

        headers = [cell.text.strip().lower() for cell in rows[0].cells]
        if "—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞" not in headers or "–≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤" not in headers:
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤

        question_idx = headers.index("—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞")
        answers_idx = headers.index("–≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤")
        correct_idx = headers.index("—ç—Ç–∞–ª–æ–Ω") if "—ç—Ç–∞–ª–æ–Ω" in headers else None

        for row in rows[1:]:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            question_text = row.cells[question_idx].text.strip()
            answer_text = row.cells[answers_idx].text.strip()
            correct_text = row.cells[correct_idx].text.strip() if correct_idx else ""

            if current_block and current_theme:
                blocks[current_block][current_theme].append({
                    "question": question_text,
                    "answers": answer_text.split("\n"),  # –†–∞–∑–¥–µ–ª—è–µ–º –æ—Ç–≤–µ—Ç—ã –ø–æ —Å—Ç—Ä–æ–∫–∞–º
                    "correct": correct_text.split("\n")  # –†–∞–∑–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
                })

    return blocks

if uploaded_file:
    doc = Document(uploaded_file)
    blocks = extract_blocks_and_questions(doc)

    if not blocks:
        st.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –±–ª–æ–∫–∏ –∏ –≤–æ–ø—Ä–æ—Å—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
    else:
        if "blocks" not in st.session_state:
            st.session_state["blocks"] = blocks
            st.session_state["selected_block"] = None
            st.session_state["selected_theme"] = None
            st.session_state["questions"] = []
            st.session_state["current_question"] = 0
            st.session_state["show_result"] = False
            st.session_state["selected_answers"] = {}

        # –í—ã–±–æ—Ä –±–ª–æ–∫–∞
        st.header("–í—ã–±–µ—Ä–∏—Ç–µ –±–ª–æ–∫")
        block = st.selectbox("–ë–ª–æ–∫:", list(blocks.keys()), index=0 if not st.session_state["selected_block"] else list(blocks.keys()).index(st.session_state["selected_block"]))

        if block:
            st.session_state["selected_block"] = block

            # –í—ã–±–æ—Ä —Ç–µ–º—ã
            st.header("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É")
            theme = st.selectbox("–¢–µ–º–∞:", list(blocks[block].keys()), index=0 if not st.session_state["selected_theme"] else list(blocks[block].keys()).index(st.session_state["selected_theme"]))

            if theme:
                st.session_state["selected_theme"] = theme

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–æ–ø—Ä–æ—Å—ã –≤ —Ç–µ–º–µ
                if len(blocks[block][theme]) > 0:
                    st.session_state["questions"] = blocks[block][theme]
                    st.session_state["selected_answers"] = {i: [] for i in range(len(st.session_state["questions"]))}

                    if st.button("–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç"):
                        st.session_state["current_question"] = 0
                        st.session_state["show_result"] = False
                        st.session_state["selected_answers"] = {i: [] for i in range(len(st.session_state["questions"]))}
                        st.rerun()
                else:
                    st.warning("‚ö†Ô∏è –í —ç—Ç–æ–π —Ç–µ–º–µ –ø–æ–∫–∞ –Ω–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏–¥—É—Ç –ø–µ—Ä–µ–¥ —Ç–∞–±–ª–∏—Ü–∞–º–∏.")
