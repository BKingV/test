import streamlit as st
from docx import Document

st.title("üìÑ –û–Ω–ª–∞–π–Ω-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑ Word-—Ñ–∞–π–ª–∞")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Word-—Ñ–∞–π–ª —Å —Ç–µ—Å—Ç–∞–º–∏", type=["docx"])

def extract_questions_from_tables(doc):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –∏–∑ —Ç–∞–±–ª–∏—Ü Word-–¥–æ–∫—É–º–µ–Ω—Ç–∞"""
    questions = []

    for table in doc.tables:
        rows = table.rows
        if len(rows) < 2:
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Ç–∞–±–ª–∏—Ü—ã

        headers = [cell.text.strip().lower() for cell in rows[0].cells]
        if "—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞" not in headers or "–≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤" not in headers:
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤

        question_idx = headers.index("—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞")
        answers_idx = headers.index("–≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤")
        correct_idx = headers.index("—ç—Ç–∞–ª–æ–Ω") if "—ç—Ç–∞–ª–æ–Ω" in headers else None

        current_question = None
        answers = []
        correct_answers = []

        for row in rows[1:]:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            question_text = row.cells[question_idx].text.strip()
            answer_text = row.cells[answers_idx].text.strip()
            correct_text = row.cells[correct_idx].text.strip() if correct_idx else ""

            if question_text and question_text != current_question:
                # –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏ –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π
                if current_question and answers:
                    questions.append({
                        "question": current_question,
                        "answers": answers,
                        "correct": correct_answers
                    })
                current_question = question_text
                answers = []
                correct_answers = []

            if answer_text:
                answers.append(answer_text)  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞

            if correct_text:  # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
                correct_answers.append(answer_text)  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –í–°–ï –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å –ø–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–¥–∞ –ø–æ –≤—Å–µ–º —Å—Ç—Ä–æ–∫–∞–º
        if current_question and answers:
            questions.append({
                "question": current_question,
                "answers": answers,
                "correct": correct_answers
            })

    return questions

if uploaded_file:
    doc = Document(uploaded_file)
    questions = extract_questions_from_tables(doc)

    if not questions:
        st.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –≤–æ–ø—Ä–æ—Å—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
    else:
        if "questions" not in st.session_state:
            st.session_state["questions"] = questions
            st.session_state["current_question"] = 0
            st.session_state["score"] = 0
            st.session_state["show_result"] = False
            st.session_state["selected_answers"] = {i: [] for i in range(len(questions))}  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã

        st.success(f"–ù–∞–π–¥–µ–Ω–æ {len(questions)} –≤–æ–ø—Ä–æ—Å–æ–≤. –ú–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å —Ç–µ—Å—Ç!")

        if st.button("–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç"):
            st.session_state["current_question"] = 0
            st.session_state["score"] = 0
            st.session_state["show_result"] = False
            st.session_state["selected_answers"] = {i: [] for i in range(len(questions))}
            st.rerun()

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü—Ä–µ–¥—ã–¥—É—â–∏–π –≤–æ–ø—Ä–æ—Å" –∏ "–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å"
if "questions" in st.session_state and "current_question" in st.session_state and not st.session_state.get("show_result", False):
    q_idx = st.session_state["current_question"]
    question_data = st.session_state["questions"][q_idx]

    st.subheader(question_data["question"])
    
    selected_answers = st.session_state["selected_answers"].get(q_idx, [])

    for i, answer in enumerate(question_data["answers"]):
        key = f"q{q_idx}_a{i}"  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–µ–∫–±–æ–∫—Å–∞
        checked = answer in selected_answers
        if st.checkbox(answer, key=key, value=checked):
            if answer not in selected_answers:
                selected_answers.append(answer)
        else:
            if answer in selected_answers:
                selected_answers.remove(answer)

    st.session_state["selected_answers"][q_idx] = selected_answers

    col1, col2, col3 = st.columns([1, 2, 1])
    
    with col1:
        if st.button("‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π –≤–æ–ø—Ä–æ—Å") and q_idx > 0:
            st.session_state["current_question"] -= 1
            st.rerun()

    with col3:
        if st.button("‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å"):
            correct_set = set(question_data["correct"])
            selected_set = set(selected_answers)

            # –ù–∞—á–∏—Å–ª—è–µ–º –±–∞–ª–ª —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω—ã –¢–û–õ–¨–ö–û –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
            if selected_set == correct_set:
                st.session_state["score"] += 1

            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
            if q_idx + 1 < len(st.session_state["questions"]):
                st.session_state["current_question"] += 1
                st.rerun()
            else:
                st.session_state["show_result"] = True
                st.rerun()

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ç–µ—Å—Ç–∞
if st.session_state.get("show_result", False):
    st.success("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    total_questions = len(st.session_state["questions"])
    score = st.session_state["score"]
    st.write(f"üìä –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: **{score} –∏–∑ {total_questions}** –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.")

    if st.button("–ü—Ä–æ–π—Ç–∏ —Å–Ω–æ–≤–∞"):
        st.session_state["current_question"] = 0
        st.session_state["score"] = 0
        st.session_state["show_result"] = False
        st.session_state["selected_answers"] = {i: [] for i in range(len(st.session_state["questions"]))}
        st.rerun()
