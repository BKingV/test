import streamlit as st
import pandas as pd
from docx import Document

st.title("üìÑ –û–Ω–ª–∞–π–Ω-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ —Ç–µ–º–∞–º")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Word-—Ñ–∞–π–ª —Å —Ç–µ—Å—Ç–∞–º–∏", type=["docx"])

def extract_themes_and_questions(doc):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–º—ã, –ø–æ–¥—Ç–µ–º—ã –∏ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞—á–∏–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–æ–ª—å–∫–æ —Å –ø–µ—Ä–≤–æ–π —Ç–µ–º—ã, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π –∏–¥–µ—Ç —Ç–∞–±–ª–∏—Ü–∞"""
    themes = {}

    st.write("üìå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ:", len(doc.tables))  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü

    # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç–∞–±–ª–∏—Ü—É, —Ç–∞–∫ –∫–∞–∫ –≤ –Ω–µ–π –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ø–æ–¥—Ç–µ–º—ã
    table = doc.tables[-1]

    st.write("üìå –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç–∞–±–ª–∏—Ü—ã:", [[cell.text for cell in row.cells] for row in table.rows])

    current_subtheme = None  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ø–æ–¥—Ç–µ–º—ã

    for row in table.rows[1:]:
        first_cell_text = row.cells[0].text.strip()  # –ü–µ—Ä–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü
        question_text = row.cells[1].text.strip()  # –í–æ–ø—Ä–æ—Å
        answer_text = row.cells[2].text.strip()  # –í–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞
        correct_text = row.cells[3].text.strip() if len(row.cells) > 3 else ""  # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç

        # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ (–ø–æ–¥—Ç–µ–º—É), –æ–±–Ω–æ–≤–ª—è–µ–º current_subtheme
        if first_cell_text and all(cell.text.strip() == first_cell_text for cell in row.cells):
            current_subtheme = first_cell_text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é –ø–æ–¥—Ç–µ–º—É
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫—É, –Ω–µ –¥–æ–±–∞–≤–ª—è—è –µ—ë –≤ –≤–æ–ø—Ä–æ—Å—ã

        # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–æ–ø—Ä–æ—Å, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ —Å –ø–æ–¥—Ç–µ–º–æ–π
        if question_text:
            question_data = {
                "question": question_text,
                "answers": [],
                "correct": [],
                "subtheme": current_subtheme  # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å –∫ —Ç–µ–∫—É—â–µ–π –ø–æ–¥—Ç–µ–º–µ
            }
            themes.setdefault("–¢–µ–º–∞", []).append(question_data)

        # –î–æ–±–∞–≤–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
        if themes["–¢–µ–º–∞"] and "question" in themes["–¢–µ–º–∞"][-1]:
            themes["–¢–µ–º–∞"][-1]["answers"].append(answer_text)
            if correct_text:
                themes["–¢–µ–º–∞"][-1]["correct"].append(answer_text)

    return themes

if uploaded_file:
    doc = Document(uploaded_file)
    themes = extract_themes_and_questions(doc)

    if not themes:
        st.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–º—ã –∏ –≤–æ–ø—Ä–æ—Å—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
    else:
        if "themes" not in st.session_state:
            st.session_state["themes"] = themes
            st.session_state["selected_theme"] = None
            st.session_state["selected_subtheme"] = None
            st.session_state["questions"] = []
            st.session_state["current_question"] = 0
            st.session_state["test_started"] = False
            st.session_state["show_result"] = False
            st.session_state["selected_answers"] = {}

        if not st.session_state.get("test_started", False):
            st.subheader("üìö –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É:")
            selected_theme = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É", list(st.session_state["themes"].keys()), key="theme_select")

            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ç–µ–º (—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏)
            subthemes = list(set(q["subtheme"] for q in st.session_state["themes"][selected_theme] if q["subtheme"]))

            selected_subtheme = None
            if subthemes:
                st.subheader("üìÇ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ç–µ–º—É:")
                selected_subtheme = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ç–µ–º—É", subthemes, key="subtheme_select")

            # –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç" —Ç–µ–ø–µ—Ä—å –Ω–∏–∂–µ
            if st.button("‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç"):
                st.session_state["selected_theme"] = selected_theme
                st.session_state["selected_subtheme"] = selected_subtheme

                # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –ø–æ–¥—Ç–µ–º–∞ ‚Äì –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –µ–µ –≤–æ–ø—Ä–æ—Å—ã
                if selected_subtheme:
                    st.session_state["questions"] = [q for q in st.session_state["themes"][selected_theme] if q["subtheme"] == selected_subtheme]
                else:
                    st.session_state["questions"] = st.session_state["themes"][selected_theme]  # –ë–µ—Ä–µ–º –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã —Ç–µ–º—ã

                st.session_state["current_question"] = 0
                st.session_state["test_started"] = True
                st.session_state["show_result"] = False
                st.session_state["selected_answers"] = {}
                st.rerun()
