import streamlit as st
from docx import Document

st.title("üìÑ –û–Ω–ª–∞–π–Ω-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ —Ç–µ–º–∞–º")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Word-—Ñ–∞–π–ª —Å —Ç–µ—Å—Ç–∞–º–∏", type=["docx"])

def extract_themes_and_questions(doc):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–º—ã, –ø–æ–¥—Ç–µ–º—ã –∏ –≤–æ–ø—Ä–æ—Å—ã –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞ Word."""
    themes = {}

    st.write("üìå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ:", len(doc.tables))  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–∞–±–ª–∏—Ü

    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é —Ç–µ–º—É –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    current_theme = None
    for para in doc.paragraphs:
        text = para.text.strip()
        if text.startswith("–¢–ï–ú–ê:"):  
            current_theme = text.replace("–¢–ï–ú–ê:", "").strip()
            break  # –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é —Ç–µ–º—É

    if not current_theme:
        current_theme = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ç–µ–º–∞"

    st.write("üìå –ù–∞–π–¥–µ–Ω–Ω–∞—è —Ç–µ–º–∞:", current_theme)  # –í—ã–≤–æ–¥ —Ç–µ–º—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

    # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç–∞–±–ª–∏—Ü—É (–≥–¥–µ –ø–æ–¥—Ç–µ–º—ã –∏ –≤–æ–ø—Ä–æ—Å—ã)
    table = doc.tables[-1]

    # –í—ã–≤–æ–¥ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    for i, row in enumerate(table.rows):
        row_data = [cell.text.strip() for cell in row.cells]
        st.write(f"üìå –°—Ç—Ä–æ–∫–∞ {i}:", row_data)

    current_subtheme = None  # –•—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø–æ–¥—Ç–µ–º—ã

    for row in table.rows[2:]:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
        row_data = [cell.text.strip() for cell in row.cells]

        # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ç–µ–∫—Å—Ç –≤–æ –≤—Å–µ—Ö –∫–æ–ª–æ–Ω–∫–∞—Ö ‚Äî —ç—Ç–æ –ø–æ–¥—Ç–µ–º–∞!
        if len(set(row_data)) == 1 and row_data[0]:  
            current_subtheme = row_data[0]
            continue  # –ù–µ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–µ–º—É –≤ –≤–æ–ø—Ä–æ—Å—ã

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–º (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞)
        if len(row_data) >= 3 and row_data[1] and row_data[2]:  
            question_text = row_data[1]
            answer_text = row_data[2]
            correct_text = row_data[3] if len(row_data) > 3 else ""

            # –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ —Å–ø–∏—Å–æ–∫
            question_data = {
                "question": question_text,
                "answers": [answer_text],
                "correct": [answer_text] if correct_text else [],
                "subtheme": current_subtheme  # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ –ø–æ–¥—Ç–µ–º–µ
            }
            themes.setdefault(current_theme, []).append(question_data)

    st.write("üìå –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:", themes)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö

    return themes

if uploaded_file:
    doc = Document(uploaded_file)
    themes = extract_themes_and_questions(doc)

    if not themes:
        st.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–º—ã –∏ –≤–æ–ø—Ä–æ—Å—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
    else:
        if "themes" not in st.session_state:
            st.session_state["themes"] = themes
            st.session_state["selected_theme"] = None
            st.session_state["selected_subtheme"] = None
            st.session_state["questions"] = []
            st.session_state["current_question"] = 0
            st.session_state["test_started"] = False
            st.session_state["show_result"] = False
            st.session_state["selected_answers"] = {}

        if not st.session_state.get("test_started", False):
            st.subheader("üìö –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É:")
            selected_theme = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É", list(st.session_state["themes"].keys()), key="theme_select")

            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ç–µ–º (—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏)
            subthemes = list(set(q["subtheme"] for q in st.session_state["themes"][selected_theme] if q["subtheme"]))

            selected_subtheme = None
            if subthemes:
                st.subheader("üìÇ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ç–µ–º—É:")
                selected_subtheme = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ç–µ–º—É", subthemes, key="subtheme_select")

            # –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç"
            if st.button("‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç"):
                st.session_state["selected_theme"] = selected_theme
                st.session_state["selected_subtheme"] = selected_subtheme

                # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –ø–æ–¥—Ç–µ–º–∞ ‚Äì –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –µ—ë –≤–æ–ø—Ä–æ—Å—ã
                if selected_subtheme:
                    st.session_state["questions"] = [q for q in st.session_state["themes"][selected_theme] if q["subtheme"] == selected_subtheme]
                else:
                    st.session_state["questions"] = st.session_state["themes"][selected_theme]  # –ë–µ—Ä–µ–º –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã —Ç–µ–º—ã

                st.session_state["current_question"] = 0
                st.session_state["test_started"] = True
                st.session_state["show_result"] = False
                st.session_state["selected_answers"] = {}
                st.rerun()
