import streamlit as st
import pandas as pd
from docx import Document

st.title("üìÑ –û–Ω–ª–∞–π–Ω-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ —Ç–µ–º–∞–º")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Word-—Ñ–∞–π–ª —Å —Ç–µ—Å—Ç–∞–º–∏", type=["docx"])

def extract_themes_and_questions(doc):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–º—ã, –ø–æ–¥—Ç–µ–º—ã –∏ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞—á–∏–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–æ–ª—å–∫–æ —Å –ø–µ—Ä–≤–æ–π —Ç–µ–º—ã, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π –∏–¥–µ—Ç —Ç–∞–±–ª–∏—Ü–∞"""
    themes = {}
    tables_iter = iter(doc.tables)

    for para in doc.paragraphs:
        text = para.text.strip()

        if text.startswith("–¢–ï–ú–ê:"):
            current_theme = text.replace("–¢–ï–ú–ê:", "").strip()
            themes[current_theme] = []

            try:
                table = next(tables_iter)
                headers = [cell.text.strip().lower() for cell in table.rows[0].cells]
                if "—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞" not in headers or "–≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤" not in headers:
                    continue  

                question_idx = headers.index("—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞")
                answers_idx = headers.index("–≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤")
                correct_idx = headers.index("—ç—Ç–∞–ª–æ–Ω") if "—ç—Ç–∞–ª–æ–Ω" in headers else None

                current_subtheme = None  

                for row in table.rows[1:]:
                    first_cell_text = row.cells[0].text.strip()
                    question_text = row.cells[question_idx].text.strip()
                    answer_text = row.cells[answers_idx].text.strip()
                    correct_text = row.cells[correct_idx].text.strip() if correct_idx else ""

                    # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ - –∑–∞–≥–æ–ª–æ–≤–æ–∫, —Å—á–∏—Ç–∞–µ–º –µ–µ –ø–æ–¥—Ç–µ–º–æ–π
                    if first_cell_text and not question_text and len(row.cells) == 1:
                        current_subtheme = first_cell_text
                        continue

                    # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–æ–ø—Ä–æ—Å, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Ç–µ–º—É –∏ –ø–æ–¥—Ç–µ–º—É
                    if question_text:
                        question_data = {
                            "question": question_text,
                            "answers": [],
                            "correct": [],
                            "subtheme": current_subtheme  # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å –∫ –ø–æ–¥—Ç–µ–º–µ
                        }
                        themes[current_theme].append(question_data)

                    if themes[current_theme] and "question" in themes[current_theme][-1]:
                        themes[current_theme][-1]["answers"].append(answer_text)
                        if correct_text:
                            themes[current_theme][-1]["correct"].append(answer_text)

            except StopIteration:
                pass  

    return themes

if uploaded_file:
    doc = Document(uploaded_file)
    themes = extract_themes_and_questions(doc)
    st.write("üìå –î–∞–Ω–Ω—ã–µ –ø–æ —Ç–µ–º–∞–º:", themes)  # –í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏


    if not themes:
        st.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–º—ã –∏ –≤–æ–ø—Ä–æ—Å—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
    else:
        if "themes" not in st.session_state:
            st.session_state["themes"] = themes
            st.session_state["selected_theme"] = None
            st.session_state["selected_subtheme"] = None
            st.session_state["questions"] = []
            st.session_state["current_question"] = 0
            st.session_state["test_started"] = False
            st.session_state["show_result"] = False
            st.session_state["selected_answers"] = {}

        if not st.session_state.get("test_started", False):
            st.subheader("üìö –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É:")
            selected_theme = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É", list(st.session_state["themes"].keys()), key="theme_select")

            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ç–µ–º (—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏)
            st.write("üìå –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã —Ç–µ–º—ã:", st.session_state["themes"][selected_theme])  # –ü–æ–∫–∞–∂–µ–º, –∫–∞–∫–∏–µ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–¥—Ç–µ–º—ã
            subthemes = list(set(q["subtheme"] for q in st.session_state["themes"][selected_theme] if q["subtheme"]))

            selected_subtheme = None
            if subthemes:
                st.write("üìå –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥—Ç–µ–º—ã:", subthemes)  # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ç–µ–º
                st.subheader("üìÇ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ç–µ–º—É:")
                selected_subtheme = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ç–µ–º—É", subthemes, key="subtheme_select")

            # –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç" —Ç–µ–ø–µ—Ä—å –Ω–∏–∂–µ
            if st.button("‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç"):
                st.session_state["selected_theme"] = selected_theme
                st.session_state["selected_subtheme"] = selected_subtheme

                # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –ø–æ–¥—Ç–µ–º–∞ ‚Äì –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –µ–µ –≤–æ–ø—Ä–æ—Å—ã
                if selected_subtheme:
                    st.session_state["questions"] = [q for q in st.session_state["themes"][selected_theme] if q["subtheme"] == selected_subtheme]
                else:
                    st.session_state["questions"] = st.session_state["themes"][selected_theme]  # –ë–µ—Ä–µ–º –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã —Ç–µ–º—ã

                st.session_state["current_question"] = 0
                st.session_state["test_started"] = True
                st.session_state["show_result"] = False
                st.session_state["selected_answers"] = {}
                st.rerun()
