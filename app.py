import streamlit as st
from docx import Document

st.title("üìÑ –û–Ω–ª–∞–π–Ω-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑ Word-—Ñ–∞–π–ª–∞")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Word-—Ñ–∞–π–ª —Å —Ç–µ—Å—Ç–∞–º–∏", type=["docx"])

def extract_questions_from_tables(doc):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –∏–∑ —Ç–∞–±–ª–∏—Ü Word-–¥–æ–∫—É–º–µ–Ω—Ç–∞"""
    questions = []

    for table in doc.tables:
        rows = table.rows
        if len(rows) < 2:
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Ç–∞–±–ª–∏—Ü—ã

        headers = [cell.text.strip().lower() for cell in rows[0].cells]
        if "—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞" not in headers or "–≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤" not in headers:
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤

        question_idx = headers.index("—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞")
        answers_idx = headers.index("–≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤")
        correct_idx = headers.index("—ç—Ç–∞–ª–æ–Ω") if "—ç—Ç–∞–ª–æ–Ω" in headers else None

        current_question = None
        answers = []
        correct_answer = None

        for row in rows[1:]:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            question_text = row.cells[question_idx].text.strip()
            answer_text = row.cells[answers_idx].text.strip()
            correct_text = row.cells[correct_idx].text.strip() if correct_idx else ""

            if question_text:  # –ï—Å–ª–∏ –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –≤–æ–ø—Ä–æ—Å–æ–º
                if current_question and answers:
                    questions.append({
                        "question": current_question,
                        "answers": answers,
                        "correct": correct_answer
                    })
                current_question = question_text
                answers = []
                correct_answer = None

            if answer_text:
                answer_options = answer_text.split("\n")  # –†–∞–∑–±–∏–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ —Å—Ç—Ä–æ–∫–∞–º
                answers.extend([a.strip() for a in answer_options if a.strip()])

            if correct_text:  # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
                correct_answer = correct_text.strip()

        if current_question and answers:
            questions.append({
                "question": current_question,
                "answers": answers,
                "correct": correct_answer
            })

    return questions

if uploaded_file:
    doc = Document(uploaded_file)
    questions = extract_questions_from_tables(doc)

    if not questions:
        st.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –≤–æ–ø—Ä–æ—Å—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
    else:
        st.session_state["questions"] = questions
        st.success(f"–ù–∞–π–¥–µ–Ω–æ {len(questions)} –≤–æ–ø—Ä–æ—Å–æ–≤. –ú–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å —Ç–µ—Å—Ç!")
        if st.button("–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç"):
            st.session_state["current_question"] = 0
            st.session_state["score"] = 0
            st.rerun()

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
if "questions" in st.session_state and "current_question" in st.session_state:
    q_idx = st.session_state["current_question"]
    question_data = st.session_state["questions"][q_idx]

    st.subheader(question_data["question"])
    selected_answer = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç:", question_data["answers"])

    if st.button("–û—Ç–≤–µ—Ç–∏—Ç—å"):
        if selected_answer == question_data["correct"]:
            st.session_state["score"] += 1

        if q_idx + 1 < len(st.session_state["questions"]):
            st.session_state["current_question"] += 1
            st.rerun()
        else:
            st.success("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
            st.write(f"–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ {st.session_state['score']} –∏–∑ {len(st.session_state['questions'])} –≤–æ–ø—Ä–æ—Å–æ–≤.")
