import pandas as pd
import streamlit as st

def load_questions_from_excel(file):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–∑ —Ñ–∞–π–ª–∞ Excel –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ."""
    df = pd.read_excel(file, sheet_name=None)  # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –ª–∏—Å—Ç—ã
    questions = []
    
    for sheet_name, data in df.items():
        for _, row in data.iterrows():
            if pd.notna(row["‚Ññ –ø/–ø"]):
                questions.append({
                    "block": sheet_name,  # –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª–æ–∫–∞
                    "topic": row["–¢–µ–º–∞"],  # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã
                    "number": row["‚Ññ –ø/–ø"],  # –ù–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞
                    "question": row["–¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞"],  # –¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞
                    "options": str(row["–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞"]).split(";"),  # –†–∞–∑–¥–µ–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞
                    "correct_answers": str(row["–≠—Ç–∞–ª–æ–Ω"]).split(";")  # –†–∞–∑–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
                })
    return questions

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Ç–µ—Å—Ç–∞."""
    st.title("üìù –¢—Ä–µ–Ω–∞–∂–µ—Ä –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —Ç–µ—Å—Ç—É")
    uploaded_file = st.file_uploader("üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª Excel —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏", type=["xlsx", "xls"])
    
    if uploaded_file:
        questions = load_questions_from_excel(uploaded_file)
        if not questions:
            st.error("‚ùå –û—à–∏–±–∫–∞: –≤–æ–ø—Ä–æ—Å—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
            return
        
        blocks = list(set(q['block'] for q in questions))
        selected_block = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –±–ª–æ–∫", blocks)
        block_questions = [q for q in questions if q['block'] == selected_block]
        
        topics = list(set(q['topic'] for q in block_questions))
        selected_topic = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É", topics)
        topic_questions = [q for q in block_questions if q['topic'] == selected_topic]
        
        score = 0
        for idx, q in enumerate(topic_questions):
            st.write(f"**{q['number']}. {q['question']}**")
            selected_option = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç:", q['options'], key=f"q_{idx}", index=None)
            
            if st.button(f"–ü—Ä–æ–≤–µ—Ä–∏—Ç—å {q['number']}", key=f"check_{idx}"):
                if selected_option and selected_option in q['correct_answers']:
                    st.success("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
                    score += 1
                elif selected_option:
                    st.error(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {', '.join(q['correct_answers'])}")
                else:
                    st.warning("‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π.")
        
        st.write(f"üèÜ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {score}/{len(topic_questions)}")

if __name__ == "__main__":
    main()
